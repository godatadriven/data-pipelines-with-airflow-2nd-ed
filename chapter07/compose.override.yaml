x-airflow-common:
  &airflow-common
  environment:
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__TEST_CONNECTION: 'Enabled'
    AIRFLOW__SCHEDULER__DAG_DIR_LIST_INTERVAL : 60
    # Dag specific connection setup
    AWS_REGION: ${AWS_REGION}
    MNIST_BUCKET: ${MNIST_BUCKET}
    SAGEMAKER_EXEC_ROLE_ARN: ${SAGEMAKER_EXEC_ROLE_ARN}
    AIRFLOW_CONN_INSIDE_AIRBNB: postgres://insideairbnb:insideairbnb@insideairbnb:5432/insideairbnb
    AIRFLOW_CONN_LOCALS3: s3://secretaccess:secretkey@?endpoint_url=http%3A%2F%2Flocals3%3A9000
    AIRFLOW_CONN_AWS_DEFAULT: aws://${AWS_ACCESS_KEY_ID}:${ENCODED_AWS_SECRET_ACCESS_KEY}@/?region_name=${AWS_REGION}
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock

services:
  airflow-webserver:
    <<: *airflow-common

  airflow-scheduler:
    <<: *airflow-common

  airflow-worker:
    <<: *airflow-common

  airflow-triggerer:
    <<: *airflow-common

  airflow-init:
    <<: *airflow-common

  airflow-cli:
    <<: *airflow-common

  insideairbnb:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=insideairbnb
      - POSTGRES_PASSWORD=insideairbnb
      - POSTGRES_DB=insideairbnb
    ports:
      - "5433:5432"
    volumes:
      - ./scripts/postgres-init.sh:/docker-entrypoint-initdb.d/postgres-init.sh
      - postgres-data-db-volume:/var/lib/postgresql/data

  locals3:
    image: minio/minio:RELEASE.2024-06-22T05-26-45Z
    ports:
      - "9000:9000"
      - "35299:35299"
    environment:
      - MINIO_ACCESS_KEY=secretaccess
      - MINIO_SECRET_KEY=secretkey
    command: "server /data"
    volumes:
      - locals3-data-volume:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  locals3_init:
    image: minio/mc:RELEASE.2024-06-20T14-50-54Z
    depends_on:
      - locals3
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add locals3 http://locals3:9000 secretaccess secretkey); do echo 'MinIO not up and running yet...' && sleep 1; done;
      echo 'MinIO is available.';
      /usr/bin/mc alias set locals3 http://locals3:9000 secretaccess secretkey;
      /usr/bin/mc admin user add locals3/ secretaccess secretkey;
      /usr/bin/mc admin policy set locals3/ readwrite user=secretaccess;
      /usr/bin/mc mb locals3/inside-airbnb;
      /usr/bin/mc policy set public locals3/inside-airbnb;
      exit 0;
      "

  # These aren't actual services, but we include them to make sure that the
  # corresponding images are built by when pulling up docker-compose.
  numbercruncher:
    build:
      context: docker/numbercruncher
    image: manning-airflow/numbercruncher
    restart: "no"

volumes:
  locals3-data-volume:
  postgres-data-db-volume:
