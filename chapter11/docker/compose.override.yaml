x-airflow-common:
  &airflow-common
  environment:
    AIRFLOW__DAG_PROCESSOR__REFRESH_INTERVAL : 60
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__CORE__TEST_CONNECTION: "Enabled"
    AIRFLOW__API_AUTH__JWT_SECRET: foo
    AIRFLOW__API__SECRET_KEY: bar
    # Movielens settings.
    AIRFLOW_CONN_MOVIELENS: http://airflow:airflow@movielens
    MOVIELENS_USER: airflow
    MOVIELENS_PASSWORD: airflow
    MOVIELENS_HOST: http://movielens:8081

  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    - airflow-data-volume:/data

services:
  airflow-apiserver:
    <<: *airflow-common

  airflow-dag-processor:
    <<: *airflow-common

  airflow-scheduler:
    <<: *airflow-common

  airflow-worker:
    <<: *airflow-common

  airflow-triggerer:
    <<: *airflow-common

  airflow-init:
    <<: *airflow-common

  airflow-cli:
    <<: *airflow-common

  airflow-data:
    image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:|version|}
    <<: *airflow-common
    entrypoint: /bin/bash
    # yamllint disable rule:line-length
    command:
      - -c
      - |
        if [[ -z "${AIRFLOW_UID}" ]]; then
          echo
          echo -e "\033[1;33mWARNING!!!: AIRFLOW_UID not set!\e[0m"
          echo "If you are on Linux, you SHOULD follow the instructions below to set "
          echo "AIRFLOW_UID environment variable, otherwise files will be owned by root."
          echo "For other operating systems you can get rid of the warning with manually created .env file:"
          echo "    See: https://airflow.apache.org/docs/apache-airflow/stable/howto/docker-compose/index.html#setting-the-right-airflow-user"
          echo
        fi
        chown -R "${AIRFLOW_UID}:0" /data
        exec /entrypoint airflow version
    # yamllint enable rule:line-length
    user: "0:0"

  movielens:
    build: ../../chapter09/docker/movielens-api
    image: manning-airflow/movielens-api
    ports:
      - "8081:8081"
    environment:
      API_USER: airflow
      API_PASSWORD: airflow

  # These aren't actual services, but we include them to make sure that the
  # corresponding images are built by when pulling up docker-compose.
  movielens-fetch:
    build:
      context: images/movielens-fetch
    image: manning-airflow/movielens-fetch
    restart: "no"
  movielens-rank:
    build:
      context: images/movielens-rank
    image: manning-airflow/movielens-rank
    restart: "no"

volumes:
  airflow-data-volume:
