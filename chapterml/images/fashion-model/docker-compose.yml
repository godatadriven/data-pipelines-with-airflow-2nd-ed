version: '3.7'

networks:
  app-tier:
    driver: bridge

services:
  minio:
    image: minio/minio:RELEASE.2023-12-20T01-00-02Z
    volumes:
      - s3:/data
    networks:
      - app-tier
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: AKIAIOSFODNN7EXAMPLE
      MINIO_ROOT_PASSWORD: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

  minio_init:
    image: minio/mc:RELEASE.2023-12-20T07-14-22Z
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      while ! /usr/bin/mc config host add minio http://minio:9000 AKIAIOSFODNN7EXAMPLE wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY; do echo 'MinIO not up and running yet...' && sleep 1; done;
      echo 'Added mc host config.';
      /usr/bin/mc mb minio/data || true;
      /usr/bin/mc mb minio/mlflow || true;
      exit 0;
      "
    restart: "on-failure"
    networks:
      - app-tier

  postgres:
    image: postgres:16.1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: mlflowdb
    networks:
      - app-tier
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data

  mlflow:
    image: bitnami/mlflow:latest
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: AKIAIOSFODNN7EXAMPLE
      AWS_SECRET_ACCESS_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
    networks:
      - app-tier
    ports:
      - 9002:9002
    entrypoint: mlflow
    command: server --backend-store-uri postgresql://postgres:postgres123@postgres:5432/mlflowdb --default-artifact-root s3://mlflow/ --host 0.0.0.0 --port 9002

volumes:
  postgres:
  s3:
