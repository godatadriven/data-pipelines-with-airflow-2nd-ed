x-airflow-common:
  &airflow-common
  environment:
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__TEST_CONNECTION: 'Enabled'
    AIRFLOW__DAG_PROCESSOR__REFRESH_INTERVAL: 60
    AIRFLOW__API_AUTH__JWT_SECRET: foo
    AIRFLOW__WEBSERVER__SECRET_KEY: bar
    # Dag specific connection variables
    AIRFLOW_CONN_FS_DEFAULT: 'fs://@?path=/'
    AIRFLOW_CONN_KAFKA_DEFAULT: '{
      "conn_type": "kafka",
      "extra": {
        "bootstrap.servers": "kafka:9092",
        "group.id": "group_1",
        "security.protocol": "PLAINTEXT",
        "auto.offset.reset": "beginning"
      }
    }'
  volumes:
    - airflow-data-volume:/data


services:
  airflow-apiserver:
    <<: *airflow-common

  airflow-scheduler:
    <<: *airflow-common

  airflow-worker:
    <<: *airflow-common

  airflow-triggerer:
    <<: *airflow-common

  airflow-init:
    <<: *airflow-common

  airflow-cli:
    <<: *airflow-common

  airflow-dag-processor:
    <<: *airflow-common

  kafka:
    image: apache/kafka:3.9.1
    restart: always
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://localhost:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT

      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    healthcheck:
      test: [ "CMD", "/opt/kafka/bin/kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s


  kafka-init:
    image: apache/kafka:3.9.1
    restart: no
    entrypoint: /bin/bash -c "./opt/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --create --topic events"
    depends_on:
      kafka:
        condition: service_healthy

  airflow-data:
    image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:|version|}
    <<: *airflow-common
    entrypoint: /bin/bash
    # yamllint disable rule:line-length
    command:
      - -c
      - |
        if [[ -z "${AIRFLOW_UID}" ]]; then
          echo
          echo -e "\033[1;33mWARNING!!!: AIRFLOW_UID not set!\e[0m"
          echo "If you are on Linux, you SHOULD follow the instructions below to set "
          echo "AIRFLOW_UID environment variable, otherwise files will be owned by root."
          echo "For other operating systems you can get rid of the warning with manually created .env file:"
          echo "    See: https://airflow.apache.org/docs/apache-airflow/stable/howto/docker-compose/index.html#setting-the-right-airflow-user"
          echo
        fi
        chown -R "${AIRFLOW_UID}:0" /data
        exec /entrypoint airflow version
    # yamllint enable rule:line-length
    user: "0:0"


volumes:
  airflow-data-volume:

